html
	head
		meta(charset="utf-8")

		title reveal.js - The HTML Presentation Framework</title>

		meta(name="description", content="A framework for easily creating beautiful presentations using HTML")
		meta(name="author",content="Hakim El Hattab")

		meta(name="apple-mobile-web-app-capable", content="yes")
		meta(name="apple-mobile-web-app-status-bar-style", content="black-translucent")

		meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")

		link(rel="stylesheet", href="revealjs/css/reveal.min.css")
		link(rel="stylesheet", href="revealjs/css/theme/default.css", id="theme")

		link(rel="stylesheet", href="revealjs/lib/css/zenburn.css")
		link(rel="stylesheet", href="main.css")

		script
			document.write( '<link rel="stylesheet" href="revealjs/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );


		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->


	body

		div.reveal
			div.slides
				section
					h1 NodeJS for the enteprise
					h3 Ready or not?
					p
						small Laurent Zuijdwijk

				section
					h2 What is covered

					ul
						li NodeJS philosophy and internals
						li NPM: Package management & ecosystem
						li Frameworks
							ul
								li Express
								li Mongoose
								li Socket.IO
						li Testing / debugging
						li Performance
						li Deploying
				section
					h2 Heads Up
					p	What is NodeJS?
					p	Javascript on the server powered by
					ul
						li V8. The Javascript engine by Google
						li LibUV. A high performance evented I/O library which offers the same API on Windows and Unix
				
					a(href="http://ssl-static2.strongloop.com/wp-content/uploads/2013/07/SL_Infographic_v2_092013.png") <b>Infographic</b>

				section 
					h2 Versioning
					ul
						li Current version v0.10.18
						li Even number are stable releases
						li odd numbers are unstable
						li Last minor version before V1
						li Use a version manager to run your application in the runtime you have tested against
						li 
							i The docs always list the stability of a specific API


				section
					p Node works with an event loop
					p All IO works asynchronious and shouldn't block (but it can)
					p Code gets executed when an IO events happen
					ul 
						li Socket data comes in (webserver or socket IO etc)
						li Reading a file
					p Not unlike Javascript in the browser

					code 
						|var http = require('http');<br />
						|http.createServer(function (req, res) {<br />
						|&ensp;res.writeHead(200, {'Content-Type': 'text/plain'});<br />
						|&ensp;res.end('Hello World\n');<br />
						|}).listen(1337, '127.0.0.1');<br />
						|console.log('Server running at http://127.0.0.1:1337/');<br />
				section
					h2 Why is this good?
					ul 
						li Threads are expensive to create 
						li Threads never have to be idle when waiting for IO
						li Multiple requests can be handled in the same thread
				section
					h2 So NodeJS is single threaded then?
					h3 Yes and no...
					ul 
						li The event loop is single threaded
						li LibUV uses multiple threads for IO
						li The cluster module makes parallelization very easy. Multiple processes can automatically share sockets.
						li Forking for occasional heavy computations
				section
					h2 But it is Javascript and it is weakly typed

					p Use one of the altJS languages that compile to Javascript
					ul
						li Coffeescript - Write less code, so have less bugs
						li Typescript - static typing
						li Dart
					p Dynamic typing is not a big issue in real life. Use a more functional programming approach instead of classic OOP
				section
					h2 NPM
					h3 Node package manager
					p Command line tool which also supports common tasks.

					ul
						li Package management <i>'npm install myPackage'</i>
						li Packages are stored locally in the project, unless specified otherwise
						li Publishing and versioning of packages
						li Private repos available
						li Locking down package versions with 'npm shrinkwrap'

				section 
					h2 Frameworks
					ul
						li NodeJS has a HUGE (40.000+ modules) ecosystem based on NPM
						li package quality varies, so be careful

				section
					h2 Express
					h3 Fast web framework based on Sinatra
					ul 
						li Fast developement
						li Advanced routing
						li Easy to work with
						li Good templating

				section
					h2 Mongoose
					h3 MongoDB noSQL ORM
					ul 
						li Schema based
						li No baoiler plate code
						li Plays together really well with Express

				section 
					h2 Websockets
					h3 Socket.IO
					ul 
						li Easy to implement socket communications


				section
					h2 Async
					h3 Just one of the tools to solve callback 'hell'
					ul
						li 20 functions to handle multiple async calls
						li series, parallel, whilst, queue, etc..

 


				section
					h2 Testing testing testing
					p Multiple good libraries for unit testing
					ul
						li My favorite: Jasmine
						li Jasmine-node: command line tool for NodeJS
						li Easy to run in Jenkins
				
				section
					h2 debugging

					ul
						li Use node-dev to restart your process when your code changes
						li console.log is often a fast way to inspect objects
						li use node-inspector to debug your application in the Chrome debugger


				section
					h2 Running in production
					p Multiple PaaS providers
					ul 
						li Nodejitsu
						li Heroku
						li Modulus
						li App Fog
						li Azure
						li etc..
					i http://strongloop.com/strongblog/a-comparison-of-node-js-paas-hosting-providers/
				
				section
					h2 Performance
					h3 It is fast. Not the fastest, but fast enough







		script( src="revealjs/lib/js/head.min.js")
		script( src="revealjs/js/reveal.min.js")

		script

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: 'revealjs/lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'revealjs/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'revealjs/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'revealjs/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'revealjs/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'revealjs/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});
